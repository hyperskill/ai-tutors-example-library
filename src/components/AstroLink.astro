---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href = '', class: className, ...props } = Astro.props;

// Handle both internal and external links
const isExternal = typeof href === 'string' && href.startsWith('http');
const resolvedHref = isExternal ? href : import.meta.env.BASE_URL + (typeof href === 'string' && href.startsWith('/') ? href.slice(1) : href);

const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + (subpath?.[0] || '');
---

<a href={resolvedHref} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
